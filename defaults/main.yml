# roles/namespace/defaults/main.yml
---
openio_namespace_name: "{{ namespace | default('OPENIO') }}"
openio_namespace_conscience_url: >-
  {% set _var = ansible_default_ipv4.address + ':6000' -%}
  {% if openio_conscience_multiple_enable | default(false) -%}
  {%   if groups[openio_namespace_conscience_groupname] is defined -%}
  {%     if groups[openio_namespace_conscience_groupname] -%}
  {%       set list_ip = groups[openio_namespace_conscience_groupname]
                           | map('extract', hostvars, ['openio_bind_address']) | list -%}
  {%       if inventory_hostname in groups[openio_namespace_conscience_groupname] -%}
  {%         set _var = openio_bind_address + ':6000,' + list_ip | difference([openio_bind_address])
                          | map('regex_replace', '$', ':6000') | shuffle(seed=inventory_hostname) | join(',') -%}
  {%       else -%}
  {%         set _var = list_ip | difference([openio_bind_address])
                          | map('regex_replace', '$', ':6000') | shuffle(seed=inventory_hostname) | join(',') -%}
  {%       endif -%}
  {%     endif -%}
  {%   endif -%}
  {% else -%}
  {%   if openio_bind_virtual_address is defined -%}
  {%     set _var = openio_bind_virtual_address + ':6000' -%}
  {%   endif -%}
  {% endif -%}
  {{ _var }}

openio_namespace_conscience_groupname: conscience
openio_namespace_zookeeper_groupname: zookeeper
openio_namespace_zookeeper_url: "{{ openio_zookeeper_addresses_chain \
  | default(groups[openio_namespace_zookeeper_groupname] | default([]) \
  | map('extract', hostvars, ['openio_bind_address']) \
  | map('regex_replace', '$', ':' ~ default_openio_zookeeper_global_bind_port | d(6005) ) \
  | list \
  | ns_join_by(3) ) }}"
openio_namespace_oioproxy_url: "{{ openio_bind_address | d(ansible_default_ipv4.address) }}:6006"
openio_namespace_event_agent_url: "beanstalk://{{ openio_bind_address | d(ansible_default_ipv4.address) }}:6014"
openio_namespace_ecd_url: "{% if groups.ecd is defined and groups.ecd %}\
  {{ openio_bind_address | d(ansible_default_ipv4.address) }}:6017{% endif %}"
openio_namespace_meta1_digits: "{{ namespace_meta1_digits  | d(2) }}"
openio_namespace_udp_allowed: "yes"
openio_namespace_provision_only: "{{ openio_maintenance_mode | d(false) | bool }}"

openio_namespace_storage_policy: "{{ namespace_storage_policy | d('THREECOPIES') }}"
openio_namespace_chunk_size_megabytes: "{{ namespace_chunk_size_megabytes | d(100) | int }}"
openio_namespace_service_update_policy:
  - name: meta2
    policy: KEEP
    replicas: 3
    distance: 1
  - name: rdir
    policy: KEEP
    replicas: 1
    distance: 1

openio_namespace_options:
  - "sqliterepo.repo.soft_max=1000"
  - "sqliterepo.repo.hard_max=1000"
  - "sqliterepo.cache.kbytes_per_db=4096"

openio_namespace_overwrite: false

openio_namespace_redis_inventory_groupname: redis
openio_namespace_iam_connection:
  "{% if openio_namespace_redis_inventory_groupname in groups
        and groups[openio_namespace_redis_inventory_groupname] | length >= 3 -%}
      redis+sentinel://{{ (groups[openio_namespace_redis_inventory_groupname] \
        | map('extract', hostvars, ['openio_bind_address']) \
        | map('regex_replace', '$', ':6012') \
        | join(',')) \
        ~ '?sentinel_name=' ~ openio_namespace_name ~ '-master-1' }}
   {% elif openio_namespace_redis_inventory_groupname in groups
        and groups[openio_namespace_redis_inventory_groupname] | length == 1 -%}
      redis://{{ groups[openio_namespace_redis_inventory_groupname] \
        | map('extract', hostvars, ['openio_bind_address']) \
        | map('regex_replace', '$', ':6011') \
        | list | first }}
   {% endif %}"
openio_namespace_bucketdb_connection: "{{ openio_namespace_iam_connection }}"
openio_namespace_container_hierarchy_connection: "{{ openio_namespace_iam_connection }}"
...
